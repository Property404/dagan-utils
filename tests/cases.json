[
  {
    "cases": [
      {
        "run": "echo dagan | nato",
        "stdout": "Delta Alfa Golf Alfa November"
      },
      {
        "run": "nato da gan",
        "stdout": "Delta Alfa Space Golf Alfa November"
      },
      {
        "run": "echo {0..1000} | nato",
        "max_time": 1
      }
    ]
  },
  {
    "files": {
      "good_file": "Hello world!\n",
      "no_newline": "Hello world!",
      "space_at_end": "Hello world! \n",
      "too_many_newlines": "Hello world!\n\n",
      "many_spaces_at_end": "Hello world!      \n",
      "skipped_file": "\u0001\u0002\u0003\u0004\u0005"
    },
    "cases": [
      {
        "run": "wslint good_file"
      },
      {
        "run": "wslint no_newline",
        "exit": 1
      },
      {
        "run": "wslint space_at_end",
        "exit": 1
      },
      {
        "run": "wslint too_many_newlines",
        "exit": 1
      },
      {
        "run": "wslint good_file skipped_file"
      },
      {
        "run": "wslint -s good_file skipped_file && echo",
        "stderr": "",
        "stdout": ""
      },
      {
        "run": "wslint -f * || wslint *"
      }
    ]
  },
  {
    "files": {
      "zero": "",
      "one": "a",
      "six": "hello\n"
    },
    "cases": [
      {
        "run": "fsize zero",
        "stdout": "0"
      },
      {
        "run": "fsize one",
        "stdout": "1"
      },
      {
        "run": "fsize six",
        "stdout": "6"
      },
      {
        "run": "fsize -n six",
        "stdout": "6 six"
      },
      {
        "run": "fsize this-file-dont-exist",
        "exit": "1"
      }
    ]
  },
  {
    "run": "echo -e \"\\x1b[31mHello World\\x1b[0m\" | colorstrip",
    "stdout": "Hello World"
  },
  {
    "run": "echo hello world | titlecase",
    "stdout": "Hello World"
  },
  {
    "cases": [
      {
        "run": "peval 1+1",
        "stdout": "2"
      },
      {
        "run": "peval -x 1+1",
        "stdout": "0x2"
      },
      {
        "run": "peval 0/0",
        "exit": 1
      }
    ]
  },
  {
    "run": "dec2hex 32",
    "stdout": "0x20"
  },
  {
    "run": "hex2dec 20",
    "stdout": "32"
  },
  {
    "run": "argcount",
    "stdout": "0"
  },
  {
    "run": "argcount hi",
    "stdout": "1"
  },
  {
    "run": "argcount hi there",
    "stdout": "2"
  },
  {
    "files": {
      "file1": "bulbasaur\n",
      "file2": "koffing\n"
    },
    "cases": [
      {
        "run": "fswap file1 file2"
      },
      {
        "run": "cat file1",
        "stdout": "koffing"
      },
      {
        "run": "cat file2",
        "stdout": "bulbasaur"
      }
    ]
  },
  {
    "files": {
      "file1": "hello world",
      "file2": "hello"
    },
    "cases": [
      {
        "run": "fhas file1 file2"
      },
      {
        "run": "fhas file1 file1"
      },
      {
        "run": "fhas file2 file1",
        "exit": "1"
      }
    ]
  },
  {
    "cases": [
      {
        "run": "kvs -d test --help"
      },
      {
        "run": "kvs -d test store foo bar"
      },
      {
        "run": "kvs -d test list",
        "stdout": "foo bar"
      },
      {
        "run": "kvs -d test get foo",
        "stdout": "bar"
      },
      {
        "run": "kvs -d test rm foo"
      },
      {
        "run": "kvs -d test get foo",
        "exit": 1
      },
      {
        "description": "Create config in nonextant directory",
        "run": "kvs -d a/b/c/d/e/f/test store foo bar && rm -r a"
      }
    ]
  },
  {
    "run": "countdown 0",
    "max_time": 0.500
  },
  {
    "run": "untilfail false"
  }
]
