#!/usr/bin/env python3
"""Simple utility to determine if one binary file contains another."""

import sys
import argparse


def main():
    """Main function"""
    parser = argparse.ArgumentParser(
        description="Check if one binary file contains another"
    )
    parser.add_argument(
        "big", metavar="F", type=str, nargs=1, default=None, help="Containing file"
    )
    parser.add_argument(
        "small",
        metavar="F",
        type=str,
        nargs="+",
        default=None,
        help="Contained file(s)",
    )

    args = parser.parse_args(sys.argv[1::])

    big_file_name = args.big[0]
    big_contents = open(big_file_name, "rb").read()
    big_size = len(big_contents)
    all_found = True

    for small_file_name in args.small:
        try:
            with open(small_file_name, "rb") as file:
                small_contents = file.read()
                small_size = len(small_contents)
                if len(small_contents) > len(big_contents):
                    print(
                        f"Warning: '{small_file_name}' {small_size} is bigger"
                        + f"than '{big_file_name}' ({big_size} bytes)"
                    )

                findex = big_contents.find(small_contents)
                if findex == -1:
                    print(f"'{small_file_name}': Not found in '{big_file_name}'")
                    all_found = False
                else:
                    print(
                        f"'{small_file_name}': {hex(findex)} - {hex(findex+len(small_contents))}"
                    )
        except FileNotFoundError:
            print(f"Error: no such file '{small_file_name}'", file=sys.stderr)
            return 1

    return 0 if all_found else 1


if __name__ == "__main__":
    sys.exit(main())
